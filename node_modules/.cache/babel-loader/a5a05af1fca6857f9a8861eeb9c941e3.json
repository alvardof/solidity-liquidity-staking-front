{"ast":null,"code":"var _jsxFileName = \"/home/racso/Programming/solidity-stake/solidity-liquidity-staking-front/src/context/StakeManager/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport stakingManagerInfo from \"../../contracts/StakingManager.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StakeManagerContext = /*#__PURE__*/createContext();\nexport default function StakeManagerProvider(children) {\n  _s();\n\n  const address = stakingManagerInfo.address;\n  const abi = stakingManagerInfo.abi;\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(StakeManagerContext.Provider, {\n    value: {\n      address,\n      abi\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StakeManagerProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = StakeManagerProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeManagerProvider\");","map":{"version":3,"sources":["/home/racso/Programming/solidity-stake/solidity-liquidity-staking-front/src/context/StakeManager/index.jsx"],"names":["createContext","useEffect","useState","stakingManagerInfo","StakeManagerContext","StakeManagerProvider","children","address","abi"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;;AAEA,MAAMC,mBAAmB,gBAAGJ,aAAa,EAAzC;AAEA,eAAe,SAASK,oBAAT,CAA8BC,QAA9B,EAAwC;AAAA;;AACrD,QAAMC,OAAO,GAAGJ,kBAAkB,CAACI,OAAnC;AACA,QAAMC,GAAG,GAAGL,kBAAkB,CAACK,GAA/B;AACAP,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AAEA,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAArC;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAVuBD,oB;;KAAAA,oB","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport stakingManagerInfo from \"../../contracts/StakingManager.json\";\n\nconst StakeManagerContext = createContext();\n\nexport default function StakeManagerProvider(children) {\n  const address = stakingManagerInfo.address;\n  const abi = stakingManagerInfo.abi;\n  useEffect(() => {}, []);\n\n  return (\n    <StakeManagerContext.Provider value={{ address, abi }}>\n      {children}\n    </StakeManagerContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}