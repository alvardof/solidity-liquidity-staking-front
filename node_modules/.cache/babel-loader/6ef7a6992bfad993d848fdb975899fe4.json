{"ast":null,"code":"/*\nimport React, { useContext, useEffect, useState } from \"react\";\nimport WalletContext from \"../../context/Wallet\";\nimport DropFactoryContext from \"../../context/DropFactory\";\nimport useToggle from \"../../hooks/useToggle.js\";\nimport useForm from \"../../hooks/useForm.js\";\nimport DropCard from \"../../components/DropsCard\";\nimport CreateDrop from '../../components/DropForm';\n\nconst ConnectWalletButton = () => {\n  const { connectWalletHandler } = useContext(WalletContext);\n\n  return (\n    <button\n      onClick={connectWalletHandler}\n      className=\"cta-button connect-wallet-button\"\n    >\n      Connect Wallet\n    </button>\n  );\n};\n\n\nconst Main = () => {\n  const { currentAccount } = useContext(WalletContext);\n  const { totalDrops, getAllDrops } = useContext(DropFactoryContext);\n  const [dropsCount, setDropsCount] = useState(0);\n  const [drops, setDrops] = useState([]);\n\n  useEffect(() => {\n    if (totalDrops) {\n      const dropsNumber = totalDrops();\n      const allDrops = getAllDrops();\n\n      Promise.all([dropsNumber, allDrops]).then((e) => {\n        setDropsCount(e[0]?.toString());\n        setDrops(e[1]);\n      });\n    }\n    //eslint-disable-next-line\n  }, [getAllDrops, totalDrops]);\n\n  return (\n    <div className=\"main-app\">\n      <h1>Nft Drop Factory {dropsCount}</h1>\n      {currentAccount ? <CreateDrop /> : <ConnectWalletButton />}\n      <div className=\"drops-grid\">\n        {drops.map((drop, index) => {\n          return <DropCard dropId={index} key={index + drop.name} drop={drop} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n\n*/","map":{"version":3,"sources":["/home/alvaradof/cursoSolidity/solidity-liquidity-staking-front/src/views/Main/index.jsx"],"names":[],"mappings":"AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n\n\n\n\n\n/*\nimport React, { useContext, useEffect, useState } from \"react\";\nimport WalletContext from \"../../context/Wallet\";\nimport DropFactoryContext from \"../../context/DropFactory\";\nimport useToggle from \"../../hooks/useToggle.js\";\nimport useForm from \"../../hooks/useForm.js\";\nimport DropCard from \"../../components/DropsCard\";\nimport CreateDrop from '../../components/DropForm';\n\nconst ConnectWalletButton = () => {\n  const { connectWalletHandler } = useContext(WalletContext);\n\n  return (\n    <button\n      onClick={connectWalletHandler}\n      className=\"cta-button connect-wallet-button\"\n    >\n      Connect Wallet\n    </button>\n  );\n};\n\n\nconst Main = () => {\n  const { currentAccount } = useContext(WalletContext);\n  const { totalDrops, getAllDrops } = useContext(DropFactoryContext);\n  const [dropsCount, setDropsCount] = useState(0);\n  const [drops, setDrops] = useState([]);\n\n  useEffect(() => {\n    if (totalDrops) {\n      const dropsNumber = totalDrops();\n      const allDrops = getAllDrops();\n\n      Promise.all([dropsNumber, allDrops]).then((e) => {\n        setDropsCount(e[0]?.toString());\n        setDrops(e[1]);\n      });\n    }\n    //eslint-disable-next-line\n  }, [getAllDrops, totalDrops]);\n\n  return (\n    <div className=\"main-app\">\n      <h1>Nft Drop Factory {dropsCount}</h1>\n      {currentAccount ? <CreateDrop /> : <ConnectWalletButton />}\n      <div className=\"drops-grid\">\n        {drops.map((drop, index) => {\n          return <DropCard dropId={index} key={index + drop.name} drop={drop} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n\n*/"]},"metadata":{},"sourceType":"module"}