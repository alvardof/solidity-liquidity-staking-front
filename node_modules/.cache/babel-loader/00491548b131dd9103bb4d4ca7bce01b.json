{"ast":null,"code":"var _jsxFileName = \"/home/alvaradof/cursoSolidity/solidity-liquidity-staking-front/src/components/DropForm/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport DropFactoryContext from \"../../context/DropFactory\";\nimport useToggle from \"../../hooks/useToggle.js\";\nimport useForm from \"../../hooks/useForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateDrop = () => {\n  _s();\n\n  const {\n    addLiq\n  } = useContext(DropFactoryContext);\n  const showForm = useToggle();\n  const showStak = useToggle();\n  const tokenA = useForm({\n    type: \"text\",\n    placeholder: \"token A\"\n  });\n  const tokenB = useForm({\n    type: \"text\",\n    placeholder: \"amount token A\"\n  });\n  const tokenC = useForm({\n    type: \"text\",\n    placeholder: \"token B\"\n  });\n  const tokenD = useForm({\n    type: \"text\",\n    placeholder: \"amount token A\"\n  });\n  const tokenStakAdd = useForm({\n    type: \"text\",\n    placeholder: \"LP token to stake\"\n  });\n  const maxSupply = useForm({\n    type: \"number\",\n    placeholder: \"max suply of nfts\"\n  });\n  const name = useForm({\n    type: \"number\",\n    placeholder: \"name of the drop\"\n  });\n  const cid = useForm({\n    type: \"text\",\n    placeholder: \"cid from ipfs or use a body of your url\"\n  });\n  const prefix = useForm({\n    type: \"text\",\n    placeholder: \"ipfs:// or https\"\n  });\n  const sufix = useForm({\n    type: \"text\",\n    placeholder: \"extension of your file e.j .json\"\n  });\n  const hiddenURI = useForm({\n    type: \"text\",\n    placeholder: \"URI from the nft loading image\"\n  });\n  const maxPerTX = useForm({\n    type: \"number\",\n    placeholder: \"max mint per transaction\"\n  });\n\n  const preventDefault = async e => {\n    e.preventDefault();\n    console.log(e);\n  };\n\n  const addLiquidy = async e => {\n    e.preventDefault();\n    await addLiq();\n    console.log(tokenA.value);\n    console.log(tokenB.value);\n    console.log(tokenC.value);\n    console.log(tokenD.value);\n    alert(44);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showForm.toggle,\n      className: \"cta-button mint-nft-button\",\n      children: !showForm.show ? \"change to Deposit\" : \"change to Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), showForm.show && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: preventDefault,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...tokenA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...tokenB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...tokenC\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...tokenD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showStak.toggle,\n        className: \"cta-button mint-nft-button\",\n        children: !showStak.show ? \"token staking show\" : \"token staking hide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), showStak.show && /*#__PURE__*/_jsxDEV(\"input\", { ...tokenStakAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addLiquidy,\n        className: \"cta-button mint-nft-button\",\n        children: \"confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), !showForm.show && /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Liquidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...maxSupply\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...maxSupply\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...maxSupply\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...maxSupply\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...sufix\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...hiddenURI\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...maxPerTX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cta-button mint-nft-button\",\n        children: \"confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateDrop, \"ItqCMfXYm6HHSPrxzwHVUwmiiJc=\", false, function () {\n  return [useToggle, useToggle, useForm, useForm, useForm, useForm, useForm, useForm, useForm, useForm, useForm, useForm, useForm, useForm];\n});\n\n_c = CreateDrop;\nexport default CreateDrop;\n/* \n\n\nimport React, { useContext } from \"react\";\nimport DropFactoryContext from \"../../context/DropFactory\";\nimport useToggle from \"../../hooks/useToggle.js\";\nimport useForm from \"../../hooks/useForm.js\";\n\nconst CreateDrop = () => {\n  const { createDrop } = useContext(DropFactoryContext);\n  const showForm = useToggle();\n\n  const maxSupply = useForm({\n    type: \"number\",\n    placeholder: \"max suply of nfts\",\n  });\n  const name = useForm({ type: \"text\", placeholder: \"name of the drop\" });\n  const cid = useForm({\n    type: \"text\",\n    placeholder: \"cid from ipfs or use a body of your url\",\n  });\n  const prefix = useForm({ type: \"text\", placeholder: \"ipfs:// or https\" });\n  const sufix = useForm({\n    type: \"text\",\n    placeholder: \"extension of your file e.j .json\",\n  });\n  const hiddenURI = useForm({\n    type: \"text\",\n    placeholder: \"URI from the nft loading image\",\n  });\n  const maxPerTX = useForm({\n    type: \"number\",\n    placeholder: \"max mint per transaction\",\n  });\n\n  const crateDropHandler = async (e) => {\n    e.preventDefault();\n    await createDrop(\n      maxSupply.value,\n      name.value,\n      cid.value,\n      prefix.value,\n      sufix.value,\n      hiddenURI.value,\n      maxPerTX.value\n    );\n  };\n\n  return (\n    <>\n      <button onClick={showForm.toggle} className=\"cta-button mint-nft-button\">\n        {!showForm.show ? \"Create Drops\" : \"Hide form\"}\n      </button>\n      {showForm.show && (\n        <form onSubmit={crateDropHandler}>\n          <div className=\"drop-form\">\n            <input {...maxSupply} />\n            <input {...name} />\n          </div>\n          <div className=\"drop-form\">\n            <input {...cid} />\n            <input {...prefix} />\n          </div>\n          <div className=\"drop-form\">\n            <input {...sufix} />\n            <input {...hiddenURI} />\n          </div>\n          <input {...maxPerTX} />\n\n          <button className=\"cta-button mint-nft-button\">Create drop</button>\n        </form>\n      )}\n    </>\n  );\n};\nexport default CreateDrop;\n\n\n\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDrop\");","map":{"version":3,"sources":["/home/alvaradof/cursoSolidity/solidity-liquidity-staking-front/src/components/DropForm/index.jsx"],"names":["React","useContext","DropFactoryContext","useToggle","useForm","CreateDrop","addLiq","showForm","showStak","tokenA","type","placeholder","tokenB","tokenC","tokenD","tokenStakAdd","maxSupply","name","cid","prefix","sufix","hiddenURI","maxPerTX","preventDefault","e","console","log","addLiquidy","value","alert","toggle","show"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport DropFactoryContext from \"../../context/DropFactory\";\nimport useToggle from \"../../hooks/useToggle.js\";\nimport useForm from \"../../hooks/useForm.js\";\n\nconst CreateDrop = () => {\n  const { addLiq } = useContext(DropFactoryContext);\n  const showForm = useToggle();\n  const showStak = useToggle();\n  \n\n  const tokenA = useForm({\n    type: \"text\",\n    placeholder: \"token A\",\n  });\n\n  const tokenB = useForm({\n    type: \"text\",\n    placeholder: \"amount token A\",\n  });\n\n  const tokenC = useForm({\n    type: \"text\",\n    placeholder: \"token B\",\n  });\n\n  const tokenD = useForm({\n    type: \"text\",\n    placeholder: \"amount token A\",\n  });\n\n  const tokenStakAdd = useForm({\n    type: \"text\",\n    placeholder: \"LP token to stake\",\n  });\n\n  const maxSupply = useForm({\n    type: \"number\",\n    placeholder: \"max suply of nfts\",\n  });\n\n  const name = useForm({ type: \"number\", placeholder: \"name of the drop\" });\n  const cid = useForm({\n    type: \"text\",\n    placeholder: \"cid from ipfs or use a body of your url\",\n  });\n  const prefix = useForm({ type: \"text\", placeholder: \"ipfs:// or https\" });\n  const sufix = useForm({\n    type: \"text\",\n    placeholder: \"extension of your file e.j .json\",\n  });\n  const hiddenURI = useForm({\n    type: \"text\",\n    placeholder: \"URI from the nft loading image\",\n  });\n  const maxPerTX = useForm({\n    type: \"number\",\n    placeholder: \"max mint per transaction\",\n  });\n\n  \n  const preventDefault = async (e) => {\n    e.preventDefault();\n    console.log(e)\n  };\n\n  const addLiquidy = async (e) => {\n    e.preventDefault();\n    await addLiq();\n    console.log(tokenA.value);\n    console.log(tokenB.value);\n    console.log(tokenC.value);\n    console.log(tokenD.value);\n    alert(44)\n  };\n  \n  \n\n  return (\n    <>\n      <button onClick={showForm.toggle} className=\"cta-button mint-nft-button\">\n        {!showForm.show ? \"change to Deposit\" : \"change to Withdraw\"}\n      </button>\n      {showForm.show && (\n        <form onSubmit={preventDefault}>\n          <div className=\"drop-form\">\n            <input {...tokenA} />\n            <input {...tokenB} />\n          </div>\n          <div className=\"drop-form\">\n            <input {...tokenC} />\n            <input {...tokenD} />\n          </div>\n\n          <button onClick={showStak.toggle} className=\"cta-button mint-nft-button\">\n            {!showStak.show ? \"token staking show\" : \"token staking hide\"}\n          </button>\n          {showStak.show && (\n          <input {...tokenStakAdd} />\n          )}\n\n          <button onClick={addLiquidy} className=\"cta-button mint-nft-button\">confirm</button>\n        </form> \n      )}\n      {!showForm.show && (\n     \n        <form>\n          <h2>Add Liquidity</h2>\n          <div className=\"drop-form\">\n            <input {...maxSupply} />\n            <input {...maxSupply} />\n          </div>\n          <div className=\"drop-form\">\n            <input {...maxSupply} />\n            <input {...maxSupply} />\n          </div>\n          <div className=\"drop-form\">\n            <input {...sufix} />\n            <input {...hiddenURI} />\n          </div>\n          <input {...maxPerTX} />\n\n          <button className=\"cta-button mint-nft-button\">confirm</button>\n\n         \n        </form>\n      )}\n    </>\n  );\n};\nexport default CreateDrop;\n\n\n/* \n\n\nimport React, { useContext } from \"react\";\nimport DropFactoryContext from \"../../context/DropFactory\";\nimport useToggle from \"../../hooks/useToggle.js\";\nimport useForm from \"../../hooks/useForm.js\";\n\nconst CreateDrop = () => {\n  const { createDrop } = useContext(DropFactoryContext);\n  const showForm = useToggle();\n\n  const maxSupply = useForm({\n    type: \"number\",\n    placeholder: \"max suply of nfts\",\n  });\n  const name = useForm({ type: \"text\", placeholder: \"name of the drop\" });\n  const cid = useForm({\n    type: \"text\",\n    placeholder: \"cid from ipfs or use a body of your url\",\n  });\n  const prefix = useForm({ type: \"text\", placeholder: \"ipfs:// or https\" });\n  const sufix = useForm({\n    type: \"text\",\n    placeholder: \"extension of your file e.j .json\",\n  });\n  const hiddenURI = useForm({\n    type: \"text\",\n    placeholder: \"URI from the nft loading image\",\n  });\n  const maxPerTX = useForm({\n    type: \"number\",\n    placeholder: \"max mint per transaction\",\n  });\n\n  const crateDropHandler = async (e) => {\n    e.preventDefault();\n    await createDrop(\n      maxSupply.value,\n      name.value,\n      cid.value,\n      prefix.value,\n      sufix.value,\n      hiddenURI.value,\n      maxPerTX.value\n    );\n  };\n\n  return (\n    <>\n      <button onClick={showForm.toggle} className=\"cta-button mint-nft-button\">\n        {!showForm.show ? \"Create Drops\" : \"Hide form\"}\n      </button>\n      {showForm.show && (\n        <form onSubmit={crateDropHandler}>\n          <div className=\"drop-form\">\n            <input {...maxSupply} />\n            <input {...name} />\n          </div>\n          <div className=\"drop-form\">\n            <input {...cid} />\n            <input {...prefix} />\n          </div>\n          <div className=\"drop-form\">\n            <input {...sufix} />\n            <input {...hiddenURI} />\n          </div>\n          <input {...maxPerTX} />\n\n          <button className=\"cta-button mint-nft-button\">Create drop</button>\n        </form>\n      )}\n    </>\n  );\n};\nexport default CreateDrop;\n\n\n\n\n*/"]},"metadata":{},"sourceType":"module"}