{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gorka\\\\Documents\\\\Solidity Course\\\\front2\\\\solidity-liquidity-staking-front-1\\\\src\\\\views\\\\DropInfo\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport DropFactoryContext from \"../../context/DropFactory\";\nimport WalletContext from \"../../context/Wallet\";\nimport { useParams } from \"react-router-dom\";\nimport useForm from \"../../hooks/useForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styleContainer = {\n  padding: \"10px 20px\"\n};\nconst styleForm = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"100%\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst styleHeader = { ...styleForm,\n  flexDirection: \"row\",\n  justifyContent: \"space-between\"\n};\n\nfunction DropInfo() {\n  _s();\n\n  var _drop$totalNft, _drop$maxSupply, _drop$owner, _currentAccount$toLow;\n\n  const {\n    getDropById,\n    mintDrop,\n    revealDrop\n  } = useContext(DropFactoryContext);\n  const {\n    currentAccount\n  } = useContext(WalletContext);\n  const {\n    dropId\n  } = useParams();\n  const [drop, setDrop] = useState({});\n  const mintQuantity = useForm({\n    type: \"number\",\n    placeholder: \"quantity of mints\",\n    min: 1,\n    max: drop === null || drop === void 0 ? void 0 : drop.maxMintPerTx\n  });\n  useEffect(() => {\n    const dropPromise = getDropById(dropId);\n    Promise.all([dropPromise]).then(e => {\n      setDrop(e[0]);\n    });\n  }, [getDropById, dropId]);\n\n  const revealNFTS = async () => {\n    if (currentAccount.toString() !== (drop === null || drop === void 0 ? void 0 : drop.owner.toString())) return alert(\"You are not the owner\");\n    await revealDrop(dropId);\n  };\n\n  const mintHandler = async e => {\n    e.preventDefault();\n    const mintAmount = mintQuantity.value;\n    await mintDrop(dropId, mintAmount);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styleContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styleHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: drop === null || drop === void 0 ? void 0 : drop.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [drop === null || drop === void 0 ? void 0 : (_drop$totalNft = drop.totalNft) === null || _drop$totalNft === void 0 ? void 0 : _drop$totalNft.toString(), \"/\", drop === null || drop === void 0 ? void 0 : (_drop$maxSupply = drop.maxSupply) === null || _drop$maxSupply === void 0 ? void 0 : _drop$maxSupply.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), (drop === null || drop === void 0 ? void 0 : (_drop$owner = drop.owner) === null || _drop$owner === void 0 ? void 0 : _drop$owner.toLowerCase().toString()) === (currentAccount === null || currentAccount === void 0 ? void 0 : (_currentAccount$toLow = currentAccount.toLowerCase()) === null || _currentAccount$toLow === void 0 ? void 0 : _currentAccount$toLow.toString()) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: revealNFTS,\n        className: \"cta-button connect-wallet-button\",\n        children: \"Reveal drop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: styleForm,\n      onSubmit: mintHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          margin: \"10px 0\"\n        },\n        ...mintQuantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cta-button connect-wallet-button\",\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropInfo, \"LhUvKRqZcNuRQqWLNYOfqX8uelg=\", false, function () {\n  return [useParams, useForm];\n});\n\n_c = DropInfo;\nexport default DropInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropInfo\");","map":{"version":3,"sources":["C:/Users/gorka/Documents/Solidity Course/front2/solidity-liquidity-staking-front-1/src/views/DropInfo/index.jsx"],"names":["React","useContext","useEffect","useState","DropFactoryContext","WalletContext","useParams","useForm","styleContainer","padding","styleForm","display","flexDirection","width","justifyContent","alignItems","styleHeader","DropInfo","getDropById","mintDrop","revealDrop","currentAccount","dropId","drop","setDrop","mintQuantity","type","placeholder","min","max","maxMintPerTx","dropPromise","Promise","all","then","e","revealNFTS","toString","owner","alert","mintHandler","preventDefault","mintAmount","value","name","totalNft","maxSupply","toLowerCase","margin"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport DropFactoryContext from \"../../context/DropFactory\";\r\nimport WalletContext from \"../../context/Wallet\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useForm from \"../../hooks/useForm.js\";\r\nconst styleContainer = {\r\n  padding: \"10px 20px\",\r\n};\r\nconst styleForm = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  width: \"100%\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\nconst styleHeader = {\r\n  ...styleForm,\r\n  flexDirection: \"row\",\r\n  justifyContent: \"space-between\",\r\n};\r\n\r\nfunction DropInfo() {\r\n  const { getDropById, mintDrop, revealDrop } = useContext(DropFactoryContext);\r\n  const { currentAccount } = useContext(WalletContext);\r\n  const { dropId } = useParams();\r\n  const [drop, setDrop] = useState({});\r\n  const mintQuantity = useForm({\r\n    type: \"number\",\r\n    placeholder: \"quantity of mints\",\r\n    min: 1,\r\n    max: drop?.maxMintPerTx,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const dropPromise = getDropById(dropId);\r\n    Promise.all([dropPromise]).then((e) => {\r\n      setDrop(e[0]);\r\n    });\r\n  }, [getDropById, dropId]);\r\n  const revealNFTS = async () => {\r\n    if (currentAccount.toString() !== drop?.owner.toString())\r\n      return alert(\"You are not the owner\");\r\n    await revealDrop(dropId);\r\n  };\r\n  const mintHandler = async (e) => {\r\n    e.preventDefault();\r\n    const mintAmount = mintQuantity.value;\r\n    await mintDrop(dropId, mintAmount);\r\n  };\r\n\r\n  return (\r\n    <div style={styleContainer}>\r\n      <div style={styleHeader}>\r\n        <div>\r\n          <h1>{drop?.name}</h1>\r\n          <p>\r\n            {drop?.totalNft?.toString()}/{drop?.maxSupply?.toString()}\r\n          </p>\r\n        </div>\r\n        {drop?.owner?.toLowerCase().toString() ===\r\n          currentAccount?.toLowerCase()?.toString() && (\r\n          <button\r\n            onClick={revealNFTS}\r\n            className=\"cta-button connect-wallet-button\"\r\n          >\r\n            Reveal drop\r\n          </button>\r\n        )}\r\n      </div>\r\n      <form style={styleForm} onSubmit={mintHandler}>\r\n        <input style={{ margin: \"10px 0\" }} {...mintQuantity} />\r\n        <button className=\"cta-button connect-wallet-button\">Mint</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropInfo;\r\n"]},"metadata":{},"sourceType":"module"}